#!/usr/bin/env php
<?php

# Copyright 2012 Ole Jon BjÃ¸rkum
# 
# This file is part of SpotCommander.
# 
# SpotCommander is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# SpotCommander is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with SpotCommander.  If not, see <http://www.gnu.org/licenses/>.

function getMetaData()
{
	$res = array();
	$res['playbackstatus'] = exec("qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get org.mpris.MediaPlayer2.Player PlaybackStatus");
	if ($res['playbackstatus']=='Playing') {
		$meta = `qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.GetMetadata`;
		foreach(explode("\n",$meta) as $line) {
			$line = trim($line);
			$line = explode(": ", $line, 2);
			if (!isset($line[1])) continue;
			$type = explode(':',$line[0]);
			$type = isset($type[1]) ? $type[1] : $type[0];
			$res[$type] = $line[1];
		}
	}
	return $res;
}

$playlistBnk = false;
$dir = $_ENV['HOME'].'/.config/spotify/Users';
$user = trim(`ls "$dir" -t | head -n 1`);
if ($user) {
	$dir = "$dir/$user/playlist.bnk";
	if (file_exists($dir)) $playlistBnk = $dir;
}

$spath = getcwd()."/sh/spotcommander.socket";
@unlink($spath);
$socket = stream_socket_server("unix://$spath", $errno, $errstr);

if (!$socket) {
	echo "$errstr\n";
	exit;
}

// Permissions for everyone!
chmod($spath,0666);

$playData = false;
$playTime = 0;

while ($conn = stream_socket_accept($socket,-1)) {
	$str = '';
	while(strpos($str,"\n")===false && !feof($conn))
		$str .= fread($conn,4096);
	$str = explode("\n",$str);

	$params = json_decode($str[0],true);
	//print "request: ".json_encode($params)."\n";
	$cmd = array_shift($params);

	$res = false;

	if (in_array($cmd, array("previous","next","return","play-uri"))) {
		// These commands may have a delayed effect on the current track as
		// reflected by metadata-get. We'll store the current track and time
		// so metadata-get may delay for some time until there's been a
		// change.
		$playData = getMetaData();
		$playTime = microtime(true);
	}

	if ($cmd == "spotify-launch")
		exec("spotify &");

	else if ($cmd == "spotify-quit")
		exec("qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.Quit");

	else if ($cmd == "play-pause")
		exec("qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.PlayPause");

	else if ($cmd == "previous")
		exec("qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.Previous");

	else if ($cmd == "next")
		exec("qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.Next");

	else if ($cmd == "up")
		exec("xte 'key Up'");

	else if ($cmd == "down")
		exec("xte 'key Down'");

	else if ($cmd == "tab") {
		exec("sh/spotify-focus.sh");
		exec("xte 'key Tab'");
	}
	else if ($cmd == "return")
		exec("xte 'key Return'");

	else if ($cmd == "volume") {
		$volume = $params[0] / 100;
		$volume = round($volume * 65536);
		$index = intval(trim(`pacmd list-sink-inputs | sed -e '/index:/b' -e '/application.name/b' -e d | sed -n '/application.name = "Spotify"/{g;1!p;};h' | sed 's/\s*index: //'`));
		exec("pacmd set-sink-input-volume $index $volume");
	}
	else if ($cmd == "volume-get") {
		$res = intval(trim(`pacmd list-sink-inputs | sed -e '/volume: 0: /b' -e '/application.name/b' -e d | sed -n '/application.name = "Spotify"/{g;1!p;};h' | sed 's/^\s*volume: 0:\s*\([0-9]*\).*$/\\1/'`));
	}
	else if ($cmd == "play-uri")
		exec("qdbus org.mpris.MediaPlayer2.spotify / org.freedesktop.MediaPlayer2.OpenUri {$params[0]}");

	else if ($cmd == "metadata-get") {
		// If meta data hasn't changed since last possibly song-changing 
		// command, retry every 0.1s for upto 1.5s.
		while(true) {
			$res = getMetaData();
			if ($res!=$playData || microtime(true)>=$playTime+1.5)
				break;
			usleep(100000);
		}
	}
	else if ($cmd == "toggle-shuffle") {
		exec("sh/spotify-focus.sh");
		exec("xte 'keydown Control_L' 'key S' 'keyup Control_L'");
	}
	else if ($cmd == "toggle-repeat") {
		exec("sh/spotify-focus.sh");
		exec("xte 'keydown Control_L' 'key R' 'keyup Control_L'");
	}
	else if ($cmd == "focus")
		exec("sh/spotify-focus.sh");
	else if ($cmd == "playlists-get") {
		$file = $playlistBnk ? file_get_contents($playlistBnk) : "";
		$pos = -1;

		while(($pos = strpos($file,"\002\t",$pos+1))!==false)
		{
			$p = $pos+2;
			$len = ord($file{$p});
			$p++;
			$name = substr($file,$p,$len);
			$p += $len;

			if (substr($file,$p,3)!="\030\001\031") continue;
			$p += 3;
			
			$len = ord($file{$p});
			$p++;
			$uri = substr($file,$p,$len);
			$p += $len;
			if (substr($file,$p,1)!="\031") continue;

			$res[$uri] = $name;
		}
	}

	fwrite($conn, json_encode($res));
	//print "response: ".json_encode($res)."\n";

	fclose($conn);
}
fclose($socket);

